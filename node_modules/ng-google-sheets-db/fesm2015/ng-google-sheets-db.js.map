{"version":3,"file":"ng-google-sheets-db.js","sources":["../../../projects/ng-google-sheets-db/src/lib/google-sheets-db.service.ts","../../../projects/ng-google-sheets-db/src/public-api.ts","../../../projects/ng-google-sheets-db/src/ng-google-sheets-db.ts"],"sourcesContent":["import { Observable, throwError } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\n\nimport { InjectionToken, Injectable, Inject } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\n\nexport interface GoogleSpreadsheetsResponse {\n  values: string[][];\n}\n\nexport const API_KEY = new InjectionToken<string>('Google Sheets API key');\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GoogleSheetsDbService {\n  defaultActiveValues: any[] = ['true', '1', 'yes'];\n\n  constructor(\n    private http: HttpClient,\n    @Inject(API_KEY) public apiKey: string\n  ) {}\n\n  public get<T>(\n    spreadsheetId: string,\n    worksheetName: string,\n    attributesMapping: object | string[]\n  ): Observable<T[]> {\n    return this.getRows(spreadsheetId, worksheetName).pipe(\n      map((rows: string[][]) =>\n        this.rowsToEntries(rows).map(\n          (entry: object) =>\n            this.getObjectFromEntry(entry, attributesMapping) as T\n        )\n      )\n    );\n  }\n\n  public getActive<T>(\n    spreadsheetId: string,\n    worksheetName: string,\n    attributesMapping: object | string[],\n    isActiveColumnName: string = 'is_active',\n    activeValues: string[] | string = null\n  ): Observable<T[]> {\n    if (activeValues === null) {\n      activeValues = this.defaultActiveValues;\n    } else if (!Array.isArray(activeValues)) {\n      activeValues = [activeValues];\n    }\n    return this.getRows(spreadsheetId, worksheetName).pipe(\n      map((rows: string[][]) =>\n        this.rowsToEntries(rows)\n          .filter((obj: object) =>\n            activeValues.includes(obj[isActiveColumnName].toLowerCase())\n          )\n          .map(\n            (entry: object) =>\n              this.getObjectFromEntry(entry, attributesMapping) as T\n          )\n      )\n    );\n  }\n\n  private getSpreadsheetUrl(\n    spreadsheetId: string,\n    worksheetName: string\n  ): string {\n    return (\n      'https://sheets.googleapis.com/v4/spreadsheets/' +\n      spreadsheetId +\n      '/values/' +\n      encodeURI(worksheetName) +\n      '?key=' +\n      this.apiKey\n    );\n  }\n\n  private getRows(\n    spreadsheetId: string,\n    worksheetName: string\n  ): Observable<string[][]> {\n    const spreadsheetUrl = this.getSpreadsheetUrl(spreadsheetId, worksheetName);\n\n    return this.http.get<GoogleSpreadsheetsResponse>(spreadsheetUrl).pipe(\n      map((jsonRes) => jsonRes.values),\n      catchError(this.handleError)\n    );\n  }\n\n  public rowsToEntries(rows: string[][]): object[] {\n    const columns: Array<string> = rows[0].map(this.cleanColumnName);\n    return rows.slice(1).map((row: Array<string>) =>\n      columns.reduce((entry: object, columnName: string, idx: number) => {\n        entry[columnName] = row.length > idx ? row[idx] : '';\n        return entry;\n      }, {})\n    );\n  }\n\n  public cleanColumnName(columnName: string): string {\n    return columnName.trim();\n  }\n\n  private arrayToObject(array: string[]): object {\n    return array.reduce((acc, cur) => {\n      acc[cur] = cur;\n      return acc;\n    }, {});\n  }\n\n  private getObjectFromEntry(\n    entry: object,\n    attributesMapping: object | string[]\n  ): unknown {\n    if (Array.isArray(attributesMapping)) {\n      attributesMapping = this.arrayToObject(attributesMapping);\n    }\n\n    return this.getObjectFromEntryObject(entry, attributesMapping);\n  }\n\n  private getObjectFromEntryObject(\n    entry: object,\n    attributesMapping: object,\n    columnNamePrefix: string = ''\n  ): object {\n    const obj: object = {};\n    for (const attr in Object(attributesMapping)) {\n      if (\n        attributesMapping.hasOwnProperty(attr) &&\n        !['_prefix', '_listField'].includes(attr)\n      ) {\n        if (typeof attributesMapping[attr] === 'string') {\n          obj[attr] = this.getValueFromEntry(\n            entry,\n            columnNamePrefix + attributesMapping[attr]\n          );\n        } else if (typeof attributesMapping[attr] === 'object') {\n          let columnName = '';\n          if (attributesMapping[attr].hasOwnProperty('_prefix')) {\n            columnName = attributesMapping[attr]._prefix;\n          }\n\n          if (attributesMapping[attr]._listField) {\n            obj[attr] = this.getListFromEntry(\n              entry,\n              columnNamePrefix + columnName\n            );\n          } else {\n            obj[attr] = this.getObjectFromEntryObject(\n              entry,\n              attributesMapping[attr],\n              columnNamePrefix + columnName\n            );\n          }\n        } else {\n          console.log(`Unknown type for ${attr}`);\n        }\n      }\n    }\n\n    return obj;\n  }\n\n  private getValueFromEntry(entry: object, attribute: string): string {\n    attribute = this.cleanColumnName(attribute);\n    if (entry.hasOwnProperty(attribute)) {\n      return entry[attribute];\n    } else {\n      return null;\n    }\n  }\n\n  private getListFromEntry(entry: object, attribute: string): string[] {\n    const list: string[] = [];\n\n    let i = 1;\n    let curElement: string = this.getValueFromEntry(entry, `${attribute}${i}`);\n    while (curElement) {\n      list.push(curElement);\n      i++;\n      curElement = this.getValueFromEntry(entry, `${attribute}${i}`);\n    }\n\n    return list;\n  }\n\n  private handleError(error: HttpErrorResponse): Observable<never> {\n    if (error.error instanceof ErrorEvent) {\n      console.error('An error occurred:', error.error.message);\n    } else {\n      console.error(\n        `Backend returned code ${error.status}, body was: ${error.error}`\n      );\n    }\n    return throwError('Something bad happened; please try again later.');\n  }\n}\n","/*\n * Public API Surface of ng-google-sheets-db\n */\n\nexport { GoogleSheetsDbService, API_KEY } from './lib/google-sheets-db.service';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}